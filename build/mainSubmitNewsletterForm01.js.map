{"version":3,"file":"mainSubmitNewsletterForm01.js","mappings":"MAAA,GAAIA,SAASC,eAAe,cAAe,CAEzC,IAAIC,EAAUA,GAAW,GACzBA,EAAQC,MAAK,WAEXH,SAASI,cAAcJ,UAAUK,oBAAoB,UAErD,IAAMC,EAAYN,SAASI,cAAc,eACnCG,EAAaP,SAASI,cAAc,0BACpCI,EAAgBR,SAASI,cAAc,6BAsD7CJ,SAASI,cAAc,eAAeK,QAAO,SAAUC,GACrDA,EAAIC,iBACJ,IAjCkBC,EAAMC,EAkCpBC,EAAU,mCADDd,SAASI,cAAc,QAAQW,aAAa,gBAErDC,EAAU,CACZC,KAAMP,EAAIQ,cAAcH,aAAa,aACrCI,OAAQC,OAAOC,SAASC,KACxBC,KAAMrB,EAAQsB,MACdC,OAAQ,CAAC,EACTC,YAAa,CAAC,EACdC,QAAS,mDAAmDJ,KAC1DvB,SAASI,cAAc,eAAewB,YA1CxBhB,EA8CPZ,SAASI,cAAc,eA7ClCS,GADwBA,EA8C0BG,EAAQS,SA7CvC,CAAC,EACpBb,EACGiB,KAAK,kDACLC,SAAQ,SAAUC,EAAGC,GACpB,IAAIC,EAAQjC,SAASI,cAAc4B,GAC/BE,EAAOD,EAAMlB,aAAa,QAC1BE,EACFgB,EAAMlB,aAAa,cAAgBkB,EAAMlB,aAAa,SAAW,UAAYgB,EAAI,GAC/EI,EAAQF,EAAME,MAElB,GAAa,aAATD,EACFC,EAAQF,EAAMG,QAAQ,iBACjB,GAAa,UAATF,EAAkB,CAC3B,GAAqB,OAAjBrB,EAAOI,IAA0C,iBAAjBJ,EAAOI,GACzC,OAGFkB,EACEvB,EAAKiB,KAAK,eAADQ,OAAgBJ,EAAMlB,aAAa,QAAO,eAClDoB,OAAS,IACd,CAEqB,iBAAVA,IACTA,EAAQG,EAAEC,KAAKJ,IAGjBtB,EAAOI,GAAQkB,CACjB,IAmBkB7B,EAAUkC,gBAG5BF,EAAEG,KAAK,CACHC,IAAK5B,EACL6B,KAAM3B,EACNkB,KAAM,OACNU,SAAU,OACVC,aAAa,IAEdC,MAAK,SAACC,GA9Eb,IACQC,EAGAC,EAHAD,EAAqBhD,SAASI,cAClC,8BAEI6C,EAAkBjD,SAASI,cAAc,2BAC/C4C,GACExC,EAAc0C,cAAcC,UAAUC,OACpC,6BAEJH,GACE1C,EAAW2C,cAAcC,UAAUC,OAAO,0BAC5C9C,EAAU6C,UAAUE,IAAI,gBACxB9C,EAAW4B,MAAQ,aAEnBmB,YAAW,WACThD,EAAU6C,UAAUC,OAAO,gBAC3B9C,EAAUiD,QACVvD,SAASI,cAAc,6BAA6BoD,SAAU,CAChE,GAAG,IA8DC,IACCC,MAAK,SAACC,GAAG,OAAKC,QAAQC,IAAIF,EAAI,MAEhCnD,EAAWiC,iBACVjC,EAAW2C,cAAcC,UAAUE,IAAI,2BACxC7C,EAAcgC,iBACbhC,EAAc0C,cAAcC,UAAUE,IACpC,6BAGR,GACF,GACF,C","sources":["webpack://RovoAgencyWebflow/./src/methods/submitNewsletterForm.js"],"sourcesContent":["if (document.getElementById('email-form')) {\n  // === Custom Form Handling ===\n  var Webflow = Webflow || [];\n  Webflow.push(function () {\n    // unbind webflow form handling\n    document.querySelector(document).removeEventListener('submit');\n\n    const formBlock = document.querySelector('#email-form');\n    const emailField = document.querySelector('#rovo-newsletter-email');\n    const checkboxField = document.querySelector('#rovo-newsletter-checkbox');\n\n    function handleSuccess() {\n      const errorCheckboxClass = document.querySelector(\n        '.rovo-checkbox-field-error'\n      );\n      const errorEmailClass = document.querySelector('.rovo-email-field-error');\n      errorCheckboxClass &&\n        checkboxField.parentElement.classList.remove(\n          'rovo-checkbox-field-error'\n        );\n      errorEmailClass &&\n        emailField.parentElement.classList.remove('rovo-email-field-error');\n      formBlock.classList.add('form-success');\n      emailField.value = 'Thank you!';\n\n      setTimeout(() => {\n        formBlock.classList.remove('form-success');\n        formBlock.reset();\n        document.querySelector('#rovo-newsletter-checkbox').checked = true;\n      }, 3000);\n    }\n\n    function findFields(form, result) {\n      result = result || {};\n      form\n        .find(':input:not([type=\"submit\"]):not([type=\"file\"])')\n        .forEach(function (i, el) {\n          var field = document.querySelector(el);\n          var type = field.getAttribute('type');\n          var name =\n            field.getAttribute('data-name') || field.getAttribute('name') || 'Field ' + (i + 1);\n          var value = field.value;\n\n          if (type === 'checkbox') {\n            value = field.matches(':checked');\n          } else if (type === 'radio') {\n            if (result[name] === null || typeof result[name] === 'string') {\n              return;\n            }\n\n            value =\n              form.find(`input[name='${field.getAttribute(\"name\")}']:checked`)\n              .value || null;\n          }\n\n          if (typeof value === 'string') {\n            value = $.trim(value);\n          }\n\n          result[name] = value;\n        });\n    }\n\n    document.querySelector('#email-form').submit(function (evt) {\n      evt.preventDefault();\n      let siteId = document.querySelector('html').getAttribute('data-wf-site');\n      let formUrl = 'https://webflow.com' + '/api/v1/form/' + siteId;\n      let payload = {\n        name: evt.currentTarget.getAttribute('data-name'),\n        source: window.location.href,\n        test: Webflow.env(),\n        fields: {},\n        fileUploads: {},\n        dolphin: /pass[\\s-_]?(word|code)|secret|login|credentials/i.test(\n          document.querySelector('#email-form').innerHTML\n        )\n      };\n\n      findFields(document.querySelector('#email-form'), payload.fields);\n      const isFormValid = formBlock.checkValidity();\n\n      if (isFormValid) {\n        $.ajax({\n            url: formUrl,\n            data: payload,\n            type: 'POST',\n            dataType: 'json',\n            crossDomain: true\n          })\n          .done((res) => {\n            handleSuccess();\n          })\n          .fail((err) => console.log(err));\n      } else {\n        !emailField.checkValidity() &&\n          emailField.parentElement.classList.add('rovo-email-field-error');\n        !checkboxField.checkValidity() &&\n          checkboxField.parentElement.classList.add(\n            'rovo-checkbox-field-error'\n          );\n      }\n    });\n  });\n}"],"names":["document","getElementById","Webflow","push","querySelector","removeEventListener","formBlock","emailField","checkboxField","submit","evt","preventDefault","form","result","formUrl","getAttribute","payload","name","currentTarget","source","window","location","href","test","env","fields","fileUploads","dolphin","innerHTML","find","forEach","i","el","field","type","value","matches","concat","$","trim","checkValidity","ajax","url","data","dataType","crossDomain","done","res","errorCheckboxClass","errorEmailClass","parentElement","classList","remove","add","setTimeout","reset","checked","fail","err","console","log"],"sourceRoot":""}