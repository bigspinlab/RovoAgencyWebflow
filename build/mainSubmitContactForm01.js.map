{"version":3,"file":"mainSubmitContactForm01.js","mappings":"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AM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,sBACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,yBACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,gBACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,iCACN8C,KAAM,MAER,CACE9C,KAAM,oBACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,eACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,iBACN8C,KAAM,MAER,CACE9C,KAAM,2BACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,mBACN8C,KAAM,MAER,CACE9C,KAAM,0BACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,wCACN8C,KAAM,MAER,CACE9C,KAAM,eACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,iBACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,iBACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,qBACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,oBACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,8BACN8C,KAAM,MAER,CACE9C,KAAM,gBACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,gBACN8C,KAAM,MAER,CACE9C,KAAM,mBACN8C,KAAM,MAER,CACE9C,KAAM,8BACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,gBACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,oCACN8C,KAAM,MAER,CACE9C,KAAM,gCACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,4BACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,0CACN8C,KAAM,MAER,CACE9C,KAAM,qBACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,oCACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,yBACN8C,KAAM,MAER,CACE9C,KAAM,gBACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,6CACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,mBACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,kCACN8C,KAAM,MAER,CACE9C,KAAM,uBACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,uBACN8C,KAAM,MAER,CACE9C,KAAM,gBACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,iBACN8C,KAAM,MAER,CACE9C,KAAM,2BACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,kCACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,mBACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,qBACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,eACN8C,KAAM,MAER,CACE9C,KAAM,wBACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,4BACN8C,KAAM,MAER,CACE9C,KAAM,mCACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,wBACN8C,KAAM,MAER,CACE9C,KAAM,eACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,wBACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,eACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,kBACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,eACN8C,KAAM,MAER,CACE9C,KAAM,+CACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,yBACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,uBACN8C,KAAM,MAER,CACE9C,KAAM,4BACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,+BACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,cACN8C,KAAM,MAER,CACE9C,KAAM,OACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,sBACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,eACN8C,KAAM,MAER,CACE9C,KAAM,2BACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,uBACN8C,KAAM,MAER,CACE9C,KAAM,iBACN8C,KAAM,MAER,CACE9C,KAAM,gBACN8C,KAAM,MAER,CACE9C,KAAM,uCACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,aACN8C,KAAM,MAER,CACE9C,KAAM,UACN8C,KAAM,MAER,CACE9C,KAAM,YACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,MAER,CACE9C,KAAM,0BACN8C,KAAM,MAER,CACE9C,KAAM,uBACN8C,KAAM,MAER,CACE9C,KAAM,oBACN8C,KAAM,MAER,CACE9C,KAAM,iBACN8C,KAAM,MAER,CACE9C,KAAM,QACN8C,KAAM,MAER,CACE9C,KAAM,SACN8C,KAAM,MAER,CACE9C,KAAM,WACN8C,KAAM,OAKA/D,SAAQ,SAACgE,GACjB,IAAMC,EAAM9E,SAAS+E,cAAc,UACnCD,EAAI/B,MAAQ8B,EAAQD,KACpBE,EAAIrC,UAAYoC,EAAQ/C,KACxB6C,EAAgBK,YAAYF,EAC9B,GACF,GACF,C","sources":["webpack://RovoAgencyWebflow/./src/methods/submitContactForm.js"],"sourcesContent":["if (document.getElementById('rovo-contact-inquiry-form')) {\n  // === Custom Inquiry Form Handling ===\n  var Webflow = Webflow || [];\n  Webflow.push(function () {\n    // unbind webflow form handling\n    document.querySelector(document).removeEventListener('submit');\n\n    const formBlock = document.querySelector('#rovo-inquiry-form');\n    const inputField = document.querySelectorAll('.rovo-inquiry-form__field');\n    const selectField = document.querySelectorAll('.rovo-inquiry-form__select');\n\n    const checkboxField = document.querySelector('#inquiry-form-checkbox');\n    const submitButton = document.querySelector('#inquiry-form-btn');\n\n    function handleValidationFields() {\n      inputField.forEach((input) => {\n        input.checkValidity() ?\n          input.classList.remove('rovo-inquiry-form__field--error') :\n          input.classList.add('rovo-inquiry-form__field--error');\n      });\n\n      selectField.forEach((select) => {\n        if (select.checkValidity()) {\n          select.classList.remove('rovo-inquiry-form__select--error');\n        } else {\n          select.classList.add('rovo-inquiry-form__select--error');\n          select.style.color = '#FF8181';\n        }\n      });\n    }\n\n    function handleCurrentSelectElementValidation(element) {\n      if (element.checkValidity()) {\n        element.classList.remove('rovo-inquiry-form__select--error');\n      } else {\n        element.classList.add('rovo-inquiry-form__select--error');\n        element.style.color = '#FF8181';\n      }\n    }\n\n    function handleColorsOfSelects() {\n      selectField.forEach((select) => {\n        select.options[0].disabled = true;\n\n        select.addEventListener('change', (element) => {\n          select.style.color = '#000';\n          handleCurrentSelectElementValidation(element.currentTarget);\n        });\n      });\n    }\n\n    function handleColorsOfInputs() {\n      inputField.forEach((input) => {\n        input.addEventListener('input', (element) => {\n          const inputIsNotValid = element.currentTarget.classList.contains(\n            'rovo-inquiry-form__field--error'\n          );\n          inputIsNotValid &&\n            element.currentTarget.classList.remove(\n              'rovo-inquiry-form__field--error'\n            );\n        });\n      });\n    }\n\n    function handleResetForm() {\n      formBlock.classList.remove('form-success');\n      formBlock.reset();\n      const inputElements = document.querySelector('#rovo-inquiry-form')\n        .find(':input')\n        .not(':button, :submit, :reset, :hidden');\n      inputElements.val('').getAttribute('checked', false).getAttribute('selected', false);\n      selectField.forEach((select) => {\n        select.style.color = '#c6c6c6';\n      });\n\n      checkboxField.checked = true;\n      submitButton.value = 'Submit';\n    }\n\n    function handleSuccess() {\n      const errorCheckboxClass = document.querySelector(\n        '.rovo-checkbox-field-error'\n      );\n      errorCheckboxClass &&\n        checkboxField.parentElement.classList.remove(\n          'rovo-checkbox-field-error'\n        );\n      handleValidationFields();\n\n      formBlock.classList.add('form-success');\n      submitButton.value = 'Thank you!';\n\n      setTimeout(() => {\n        handleResetForm();\n      }, 3000);\n    }\n\n    function findFields(form, result) {\n      result = result || {};\n      form\n        .find(':input:not([type=\"submit\"]):not([type=\"file\"])')\n        .forEach(function (i, el) {\n          var field = document.querySelector(el);\n          var type = field.getAttribute('type');\n          var name =\n            field.getAttribute('data-name') || field.getAttribute('name') || 'Field ' + (i + 1);\n          var value = field.value;\n\n          if (type === 'checkbox') {\n            value = field.matches(':checked');\n          } else if (type === 'radio') {\n            if (result[name] === null || typeof result[name] === 'string') {\n              return;\n            }\n\n            value = form.find(`input[name='${field.getAttribute(\"name\")}']:checked`).value || null;\n          }\n\n          if (typeof value === 'string') {\n            value = $.trim(value);\n          }\n\n          result[name] = value;\n        });\n    }\n\n    document.querySelector('#rovo-inquiry-form').submit(function (evt) {\n      evt.preventDefault();\n      let siteId = document.querySelector('html').getAttribute('data-wf-site');\n      let formUrl = 'https://webflow.com' + '/api/v1/form/' + siteId;\n      let payload = {\n        name: evt.currentTarget.getAttribute('data-name'),\n        source: window.location.href,\n        test: Webflow.env(),\n        fields: {},\n        fileUploads: {},\n        dolphin: /pass[\\s-_]?(word|code)|secret|login|credentials/i.test(\n          document.querySelector('#rovo-inquiry-form').innerHTML\n        )\n      };\n\n      findFields(document.querySelector('#rovo-inquiry-form'), payload.fields);\n      const isFormValid = formBlock.checkValidity();\n\n      if (isFormValid) {\n        $.ajax({\n            url: formUrl,\n            data: payload,\n            type: 'POST',\n            dataType: 'json',\n            crossDomain: true\n          })\n          .done((res) => {\n            handleSuccess();\n          })\n          .fail((err) => console.log(err));\n      } else {\n        handleValidationFields();\n        !checkboxField.checkValidity() &&\n          checkboxField.parentElement.classList.add(\n            'rovo-checkbox-field-error'\n          );\n      }\n    });\n\n    handleColorsOfSelects();\n    handleColorsOfInputs();\n\n    const countries = [{\n        name: 'Afghanistan',\n        code: 'AF'\n      },\n      {\n        name: 'Åland Islands',\n        code: 'AX'\n      },\n      {\n        name: 'Albania',\n        code: 'AL'\n      },\n      {\n        name: 'Algeria',\n        code: 'DZ'\n      },\n      {\n        name: 'American Samoa',\n        code: 'AS'\n      },\n      {\n        name: 'Andorra',\n        code: 'AD'\n      },\n      {\n        name: 'Angola',\n        code: 'AO'\n      },\n      {\n        name: 'Anguilla',\n        code: 'AI'\n      },\n      {\n        name: 'Antarctica',\n        code: 'AQ'\n      },\n      {\n        name: 'Antigua and Barbuda',\n        code: 'AG'\n      },\n      {\n        name: 'Argentina',\n        code: 'AR'\n      },\n      {\n        name: 'Armenia',\n        code: 'AM'\n      },\n      {\n        name: 'Aruba',\n        code: 'AW'\n      },\n      {\n        name: 'Australia',\n        code: 'AU'\n      },\n      {\n        name: 'Austria',\n        code: 'AT'\n      },\n      {\n        name: 'Azerbaijan',\n        code: 'AZ'\n      },\n      {\n        name: 'Bahamas',\n        code: 'BS'\n      },\n      {\n        name: 'Bahrain',\n        code: 'BH'\n      },\n      {\n        name: 'Bangladesh',\n        code: 'BD'\n      },\n      {\n        name: 'Barbados',\n        code: 'BB'\n      },\n      {\n        name: 'Belarus',\n        code: 'BY'\n      },\n      {\n        name: 'Belgium',\n        code: 'BE'\n      },\n      {\n        name: 'Belize',\n        code: 'BZ'\n      },\n      {\n        name: 'Benin',\n        code: 'BJ'\n      },\n      {\n        name: 'Bermuda',\n        code: 'BM'\n      },\n      {\n        name: 'Bhutan',\n        code: 'BT'\n      },\n      {\n        name: 'Bolivia',\n        code: 'BO'\n      },\n      {\n        name: 'Bosnia and Herzegovina',\n        code: 'BA'\n      },\n      {\n        name: 'Botswana',\n        code: 'BW'\n      },\n      {\n        name: 'Bouvet Island',\n        code: 'BV'\n      },\n      {\n        name: 'Brazil',\n        code: 'BR'\n      },\n      {\n        name: 'British Indian Ocean Territory',\n        code: 'IO'\n      },\n      {\n        name: 'Brunei Darussalam',\n        code: 'BN'\n      },\n      {\n        name: 'Bulgaria',\n        code: 'BG'\n      },\n      {\n        name: 'Burkina Faso',\n        code: 'BF'\n      },\n      {\n        name: 'Burundi',\n        code: 'BI'\n      },\n      {\n        name: 'Cambodia',\n        code: 'KH'\n      },\n      {\n        name: 'Cameroon',\n        code: 'CM'\n      },\n      {\n        name: 'Canada',\n        code: 'CA'\n      },\n      {\n        name: 'Cape Verde',\n        code: 'CV'\n      },\n      {\n        name: 'Cayman Islands',\n        code: 'KY'\n      },\n      {\n        name: 'Central African Republic',\n        code: 'CF'\n      },\n      {\n        name: 'Chad',\n        code: 'TD'\n      },\n      {\n        name: 'Chile',\n        code: 'CL'\n      },\n      {\n        name: 'China',\n        code: 'CN'\n      },\n      {\n        name: 'Christmas Island',\n        code: 'CX'\n      },\n      {\n        name: 'Cocos (Keeling) Islands',\n        code: 'CC'\n      },\n      {\n        name: 'Colombia',\n        code: 'CO'\n      },\n      {\n        name: 'Comoros',\n        code: 'KM'\n      },\n      {\n        name: 'Congo',\n        code: 'CG'\n      },\n      {\n        name: 'Congo, The Democratic Republic of the',\n        code: 'CD'\n      },\n      {\n        name: 'Cook Islands',\n        code: 'CK'\n      },\n      {\n        name: 'Costa Rica',\n        code: 'CR'\n      },\n      {\n        name: 'Cote D Ivoire ',\n        code: 'CI'\n      },\n      {\n        name: 'Croatia',\n        code: 'HR'\n      },\n      {\n        name: 'Cuba',\n        code: 'CU'\n      },\n      {\n        name: 'Cyprus',\n        code: 'CY'\n      },\n      {\n        name: 'Czech Republic',\n        code: 'CZ'\n      },\n      {\n        name: 'Denmark',\n        code: 'DK'\n      },\n      {\n        name: 'Djibouti',\n        code: 'DJ'\n      },\n      {\n        name: 'Dominica',\n        code: 'DM'\n      },\n      {\n        name: 'Dominican Republic',\n        code: 'DO'\n      },\n      {\n        name: 'Ecuador',\n        code: 'EC'\n      },\n      {\n        name: 'Egypt',\n        code: 'EG'\n      },\n      {\n        name: 'El Salvador',\n        code: 'SV'\n      },\n      {\n        name: 'Equatorial Guinea',\n        code: 'GQ'\n      },\n      {\n        name: 'Eritrea',\n        code: 'ER'\n      },\n      {\n        name: 'Estonia',\n        code: 'EE'\n      },\n      {\n        name: 'Ethiopia',\n        code: 'ET'\n      },\n      {\n        name: 'Falkland Islands (Malvinas)',\n        code: 'FK'\n      },\n      {\n        name: 'Faroe Islands',\n        code: 'FO'\n      },\n      {\n        name: 'Fiji',\n        code: 'FJ'\n      },\n      {\n        name: 'Finland',\n        code: 'FI'\n      },\n      {\n        name: 'France',\n        code: 'FR'\n      },\n      {\n        name: 'French Guiana',\n        code: 'GF'\n      },\n      {\n        name: 'French Polynesia',\n        code: 'PF'\n      },\n      {\n        name: 'French Southern Territories',\n        code: 'TF'\n      },\n      {\n        name: 'Gabon',\n        code: 'GA'\n      },\n      {\n        name: 'Gambia',\n        code: 'GM'\n      },\n      {\n        name: 'Georgia',\n        code: 'GE'\n      },\n      {\n        name: 'Germany',\n        code: 'DE'\n      },\n      {\n        name: 'Ghana',\n        code: 'GH'\n      },\n      {\n        name: 'Gibraltar',\n        code: 'GI'\n      },\n      {\n        name: 'Greece',\n        code: 'GR'\n      },\n      {\n        name: 'Greenland',\n        code: 'GL'\n      },\n      {\n        name: 'Grenada',\n        code: 'GD'\n      },\n      {\n        name: 'Guadeloupe',\n        code: 'GP'\n      },\n      {\n        name: 'Guam',\n        code: 'GU'\n      },\n      {\n        name: 'Guatemala',\n        code: 'GT'\n      },\n      {\n        name: 'Guernsey',\n        code: 'GG'\n      },\n      {\n        name: 'Guinea',\n        code: 'GN'\n      },\n      {\n        name: 'Guinea-Bissau',\n        code: 'GW'\n      },\n      {\n        name: 'Guyana',\n        code: 'GY'\n      },\n      {\n        name: 'Haiti',\n        code: 'HT'\n      },\n      {\n        name: 'Heard Island and Mcdonald Islands',\n        code: 'HM'\n      },\n      {\n        name: 'Holy See (Vatican City State)',\n        code: 'VA'\n      },\n      {\n        name: 'Honduras',\n        code: 'HN'\n      },\n      {\n        name: 'Hong Kong',\n        code: 'HK'\n      },\n      {\n        name: 'Hungary',\n        code: 'HU'\n      },\n      {\n        name: 'Iceland',\n        code: 'IS'\n      },\n      {\n        name: 'India',\n        code: 'IN'\n      },\n      {\n        name: 'Indonesia',\n        code: 'ID'\n      },\n      {\n        name: 'Iran, Islamic Republic Of',\n        code: 'IR'\n      },\n      {\n        name: 'Iraq',\n        code: 'IQ'\n      },\n      {\n        name: 'Ireland',\n        code: 'IE'\n      },\n      {\n        name: 'Isle of Man',\n        code: 'IM'\n      },\n      {\n        name: 'Israel',\n        code: 'IL'\n      },\n      {\n        name: 'Italy',\n        code: 'IT'\n      },\n      {\n        name: 'Jamaica',\n        code: 'JM'\n      },\n      {\n        name: 'Japan',\n        code: 'JP'\n      },\n      {\n        name: 'Jersey',\n        code: 'JE'\n      },\n      {\n        name: 'Jordan',\n        code: 'JO'\n      },\n      {\n        name: 'Kazakhstan',\n        code: 'KZ'\n      },\n      {\n        name: 'Kenya',\n        code: 'KE'\n      },\n      {\n        name: 'Kiribati',\n        code: 'KI'\n      },\n      {\n        name: 'Korea, Democratic People S Republic of ',\n        code: 'KP'\n      },\n      {\n        name: 'Korea, Republic of',\n        code: 'KR'\n      },\n      {\n        name: 'Kuwait',\n        code: 'KW'\n      },\n      {\n        name: 'Kyrgyzstan',\n        code: 'KG'\n      },\n      {\n        name: 'Lao People S Democratic Republic ',\n        code: 'LA'\n      },\n      {\n        name: 'Latvia',\n        code: 'LV'\n      },\n      {\n        name: 'Lebanon',\n        code: 'LB'\n      },\n      {\n        name: 'Lesotho',\n        code: 'LS'\n      },\n      {\n        name: 'Liberia',\n        code: 'LR'\n      },\n      {\n        name: 'Libyan Arab Jamahiriya',\n        code: 'LY'\n      },\n      {\n        name: 'Liechtenstein',\n        code: 'LI'\n      },\n      {\n        name: 'Lithuania',\n        code: 'LT'\n      },\n      {\n        name: 'Luxembourg',\n        code: 'LU'\n      },\n      {\n        name: 'Macao',\n        code: 'MO'\n      },\n      {\n        name: 'Macedonia, The Former Yugoslav Republic of',\n        code: 'MK'\n      },\n      {\n        name: 'Madagascar',\n        code: 'MG'\n      },\n      {\n        name: 'Malawi',\n        code: 'MW'\n      },\n      {\n        name: 'Malaysia',\n        code: 'MY'\n      },\n      {\n        name: 'Maldives',\n        code: 'MV'\n      },\n      {\n        name: 'Mali',\n        code: 'ML'\n      },\n      {\n        name: 'Malta',\n        code: 'MT'\n      },\n      {\n        name: 'Marshall Islands',\n        code: 'MH'\n      },\n      {\n        name: 'Martinique',\n        code: 'MQ'\n      },\n      {\n        name: 'Mauritania',\n        code: 'MR'\n      },\n      {\n        name: 'Mauritius',\n        code: 'MU'\n      },\n      {\n        name: 'Mayotte',\n        code: 'YT'\n      },\n      {\n        name: 'Mexico',\n        code: 'MX'\n      },\n      {\n        name: 'Micronesia, Federated States of',\n        code: 'FM'\n      },\n      {\n        name: 'Moldova, Republic of',\n        code: 'MD'\n      },\n      {\n        name: 'Monaco',\n        code: 'MC'\n      },\n      {\n        name: 'Mongolia',\n        code: 'MN'\n      },\n      {\n        name: 'Montserrat',\n        code: 'MS'\n      },\n      {\n        name: 'Morocco',\n        code: 'MA'\n      },\n      {\n        name: 'Mozambique',\n        code: 'MZ'\n      },\n      {\n        name: 'Myanmar',\n        code: 'MM'\n      },\n      {\n        name: 'Namibia',\n        code: 'NA'\n      },\n      {\n        name: 'Nauru',\n        code: 'NR'\n      },\n      {\n        name: 'Nepal',\n        code: 'NP'\n      },\n      {\n        name: 'Netherlands',\n        code: 'NL'\n      },\n      {\n        name: 'Netherlands Antilles',\n        code: 'AN'\n      },\n      {\n        name: 'New Caledonia',\n        code: 'NC'\n      },\n      {\n        name: 'New Zealand',\n        code: 'NZ'\n      },\n      {\n        name: 'Nicaragua',\n        code: 'NI'\n      },\n      {\n        name: 'Niger',\n        code: 'NE'\n      },\n      {\n        name: 'Nigeria',\n        code: 'NG'\n      },\n      {\n        name: 'Niue',\n        code: 'NU'\n      },\n      {\n        name: 'Norfolk Island',\n        code: 'NF'\n      },\n      {\n        name: 'Northern Mariana Islands',\n        code: 'MP'\n      },\n      {\n        name: 'Norway',\n        code: 'NO'\n      },\n      {\n        name: 'Oman',\n        code: 'OM'\n      },\n      {\n        name: 'Pakistan',\n        code: 'PK'\n      },\n      {\n        name: 'Palau',\n        code: 'PW'\n      },\n      {\n        name: 'Palestinian Territory, Occupied',\n        code: 'PS'\n      },\n      {\n        name: 'Panama',\n        code: 'PA'\n      },\n      {\n        name: 'Papua New Guinea',\n        code: 'PG'\n      },\n      {\n        name: 'Paraguay',\n        code: 'PY'\n      },\n      {\n        name: 'Peru',\n        code: 'PE'\n      },\n      {\n        name: 'Philippines',\n        code: 'PH'\n      },\n      {\n        name: 'Pitcairn',\n        code: 'PN'\n      },\n      {\n        name: 'Poland',\n        code: 'PL'\n      },\n      {\n        name: 'Portugal',\n        code: 'PT'\n      },\n      {\n        name: 'Puerto Rico',\n        code: 'PR'\n      },\n      {\n        name: 'Qatar',\n        code: 'QA'\n      },\n      {\n        name: 'Reunion',\n        code: 'RE'\n      },\n      {\n        name: 'Romania',\n        code: 'RO'\n      },\n      {\n        name: 'Russian Federation',\n        code: 'RU'\n      },\n      {\n        name: 'RWANDA',\n        code: 'RW'\n      },\n      {\n        name: 'Saint Helena',\n        code: 'SH'\n      },\n      {\n        name: 'Saint Kitts and Nevis',\n        code: 'KN'\n      },\n      {\n        name: 'Saint Lucia',\n        code: 'LC'\n      },\n      {\n        name: 'Saint Pierre and Miquelon',\n        code: 'PM'\n      },\n      {\n        name: 'Saint Vincent and the Grenadines',\n        code: 'VC'\n      },\n      {\n        name: 'Samoa',\n        code: 'WS'\n      },\n      {\n        name: 'San Marino',\n        code: 'SM'\n      },\n      {\n        name: 'Sao Tome and Principe',\n        code: 'ST'\n      },\n      {\n        name: 'Saudi Arabia',\n        code: 'SA'\n      },\n      {\n        name: 'Senegal',\n        code: 'SN'\n      },\n      {\n        name: 'Serbia and Montenegro',\n        code: 'CS'\n      },\n      {\n        name: 'Seychelles',\n        code: 'SC'\n      },\n      {\n        name: 'Sierra Leone',\n        code: 'SL'\n      },\n      {\n        name: 'Singapore',\n        code: 'SG'\n      },\n      {\n        name: 'Slovakia',\n        code: 'SK'\n      },\n      {\n        name: 'Slovenia',\n        code: 'SI'\n      },\n      {\n        name: 'Solomon Islands',\n        code: 'SB'\n      },\n      {\n        name: 'Somalia',\n        code: 'SO'\n      },\n      {\n        name: 'South Africa',\n        code: 'ZA'\n      },\n      {\n        name: 'South Georgia and the South Sandwich Islands',\n        code: 'GS'\n      },\n      {\n        name: 'Spain',\n        code: 'ES'\n      },\n      {\n        name: 'Sri Lanka',\n        code: 'LK'\n      },\n      {\n        name: 'Sudan',\n        code: 'SD'\n      },\n      {\n        name: 'Suriname',\n        code: 'SR'\n      },\n      {\n        name: 'Svalbard and Jan Mayen',\n        code: 'SJ'\n      },\n      {\n        name: 'Swaziland',\n        code: 'SZ'\n      },\n      {\n        name: 'Sweden',\n        code: 'SE'\n      },\n      {\n        name: 'Switzerland',\n        code: 'CH'\n      },\n      {\n        name: 'Syrian Arab Republic',\n        code: 'SY'\n      },\n      {\n        name: 'Taiwan, Province of China',\n        code: 'TW'\n      },\n      {\n        name: 'Tajikistan',\n        code: 'TJ'\n      },\n      {\n        name: 'Tanzania, United Republic of',\n        code: 'TZ'\n      },\n      {\n        name: 'Thailand',\n        code: 'TH'\n      },\n      {\n        name: 'Timor-Leste',\n        code: 'TL'\n      },\n      {\n        name: 'Togo',\n        code: 'TG'\n      },\n      {\n        name: 'Tokelau',\n        code: 'TK'\n      },\n      {\n        name: 'Tonga',\n        code: 'TO'\n      },\n      {\n        name: 'Trinidad and Tobago',\n        code: 'TT'\n      },\n      {\n        name: 'Tunisia',\n        code: 'TN'\n      },\n      {\n        name: 'Turkey',\n        code: 'TR'\n      },\n      {\n        name: 'Turkmenistan',\n        code: 'TM'\n      },\n      {\n        name: 'Turks and Caicos Islands',\n        code: 'TC'\n      },\n      {\n        name: 'Tuvalu',\n        code: 'TV'\n      },\n      {\n        name: 'Uganda',\n        code: 'UG'\n      },\n      {\n        name: 'Ukraine',\n        code: 'UA'\n      },\n      {\n        name: 'United Arab Emirates',\n        code: 'AE'\n      },\n      {\n        name: 'United Kingdom',\n        code: 'GB'\n      },\n      {\n        name: 'United States',\n        code: 'US'\n      },\n      {\n        name: 'United States Minor Outlying Islands',\n        code: 'UM'\n      },\n      {\n        name: 'Uruguay',\n        code: 'UY'\n      },\n      {\n        name: 'Uzbekistan',\n        code: 'UZ'\n      },\n      {\n        name: 'Vanuatu',\n        code: 'VU'\n      },\n      {\n        name: 'Venezuela',\n        code: 'VE'\n      },\n      {\n        name: 'Viet Nam',\n        code: 'VN'\n      },\n      {\n        name: 'Virgin Islands, British',\n        code: 'VG'\n      },\n      {\n        name: 'Virgin Islands, U.S.',\n        code: 'VI'\n      },\n      {\n        name: 'Wallis and Futuna',\n        code: 'WF'\n      },\n      {\n        name: 'Western Sahara',\n        code: 'EH'\n      },\n      {\n        name: 'Yemen',\n        code: 'YE'\n      },\n      {\n        name: 'Zambia',\n        code: 'ZM'\n      },\n      {\n        name: 'Zimbabwe',\n        code: 'ZW'\n      }\n    ];\n    const countriesSelect = document.getElementById('inquiry-form-country');\n\n    countries.forEach((country) => {\n      const opt = document.createElement('option');\n      opt.value = country.code;\n      opt.innerHTML = country.name;\n      countriesSelect.appendChild(opt);\n    });\n  });\n}"],"names":["document","getElementById","Webflow","push","querySelector","removeEventListener","formBlock","inputField","querySelectorAll","selectField","checkboxField","submitButton","handleValidationFields","forEach","input","checkValidity","classList","remove","add","select","style","color","submit","evt","preventDefault","form","result","formUrl","getAttribute","payload","name","currentTarget","source","window","location","href","test","env","fields","fileUploads","dolphin","innerHTML","find","i","el","field","type","value","matches","concat","$","trim","ajax","url","data","dataType","crossDomain","done","res","parentElement","setTimeout","reset","not","val","checked","fail","err","console","log","options","disabled","addEventListener","element","handleCurrentSelectElementValidation","contains","countriesSelect","code","country","opt","createElement","appendChild"],"sourceRoot":""}