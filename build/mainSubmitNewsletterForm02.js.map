{"version":3,"file":"mainSubmitNewsletterForm02.js","mappings":"MAAA,GAAIA,SAASC,eAAe,cAAe,CAEzC,IAAIC,EAAUA,GAAW,GACzBA,EAAQC,MAAK,WAEXC,EAAEJ,UAAUK,IAAI,UAEhB,IAAMC,EAAYN,SAASO,cAAc,eACnCC,EAAaR,SAASO,cAAc,0BACpCE,EAAgBT,SAASO,cAAc,6BAuD7CH,EAAE,eAAeM,QAAO,SAAUC,GAChCA,EAAIC,iBACJ,IAlCkBC,EAAMC,EAmCpBC,EAAU,mCADDX,EAAE,QAAQY,KAAK,gBAExBC,EAAU,CACZC,KAAMP,EAAIQ,cAAcC,aAAa,aACrCC,OAAQC,OAAOC,SAASC,KACxBC,KAAMvB,EAAQwB,MACdC,OAAQ,CAAC,EACTC,YAAa,CAAC,EACdC,QAAS,mDAAmDJ,KAC1DrB,EAAE,eAAe0B,SA3CHjB,EA+CPT,EAAE,eA9CbU,GADwBA,EA+CKG,EAAQU,SA9ClB,CAAC,EACpBd,EACGkB,KAAK,kDACLC,MAAK,SAAUC,EAAGC,GACjB,IAAIC,EAAQ/B,EAAE8B,GACVE,EAAOD,EAAMnB,KAAK,QAClBE,EACFiB,EAAMnB,KAAK,cAAgBmB,EAAMnB,KAAK,SAAW,UAAYiB,EAAI,GAC/DI,EAAQF,EAAMG,MAElB,GAAa,aAATF,EACFC,EAAQF,EAAMI,GAAG,iBACZ,GAAa,UAATH,EAAkB,CAC3B,GAAqB,OAAjBtB,EAAOI,IAA0C,iBAAjBJ,EAAOI,GACzC,OAGFmB,EACExB,EACGkB,KAAK,eAAiBI,EAAMnB,KAAK,QAAU,cAC3CsB,OAAS,IAChB,CAEqB,iBAAVD,IACTA,EAAQjC,EAAEoC,KAAKH,IAGjBvB,EAAOI,GAAQmB,CACjB,IAmBkB/B,EAAUmC,gBAG5BrC,EAAEsC,KAAK,CACLC,IAAK5B,EACL6B,KAAM3B,EACNmB,KAAM,OACNS,SAAU,OACVC,aAAa,IAEZC,MAAK,SAACC,GA/Eb,IACQC,EAGAC,EAHAD,EAAqBjD,SAASO,cAClC,8BAEI2C,EAAkBlD,SAASO,cAAc,2BAC/C0C,GACExC,EAAc0C,cAAcC,UAAUC,OACpC,6BAEJH,GACE1C,EAAW2C,cAAcC,UAAUC,OAAO,0BAC5C/C,EAAU8C,UAAUE,IAAI,gBACxB9C,EAAW6B,MAAQ,aAEnBkB,YAAW,WACTjD,EAAU8C,UAAUC,OAAO,gBAC3B/C,EAAUkD,QACVxD,SAASO,cAAc,6BAA6BkD,SAAU,CAChE,GAAG,IA+DC,IACCC,MAAK,SAACC,GAAG,OAAKC,QAAQC,IAAIF,EAAI,MAEhCnD,EAAWiC,iBACVjC,EAAW2C,cAAcC,UAAUE,IAAI,2BACxC7C,EAAcgC,iBACbhC,EAAc0C,cAAcC,UAAUE,IACpC,6BAGR,GACF,GACF,C","sources":["webpack://RovoAgencyWebflow/./src/methods/jQuerySubmitNewsletterForm.js"],"sourcesContent":["if (document.getElementById(\"email-form\")) {\n  // === Custom Form Handling ===\n  var Webflow = Webflow || [];\n  Webflow.push(function () {\n    // unbind webflow form handling\n    $(document).off(\"submit\");\n\n    const formBlock = document.querySelector(\"#email-form\");\n    const emailField = document.querySelector(\"#rovo-newsletter-email\");\n    const checkboxField = document.querySelector(\"#rovo-newsletter-checkbox\");\n\n    function handleSuccess() {\n      const errorCheckboxClass = document.querySelector(\n        \".rovo-checkbox-field-error\"\n      );\n      const errorEmailClass = document.querySelector(\".rovo-email-field-error\");\n      errorCheckboxClass &&\n        checkboxField.parentElement.classList.remove(\n          \"rovo-checkbox-field-error\"\n        );\n      errorEmailClass &&\n        emailField.parentElement.classList.remove(\"rovo-email-field-error\");\n      formBlock.classList.add(\"form-success\");\n      emailField.value = \"Thank you!\";\n\n      setTimeout(() => {\n        formBlock.classList.remove(\"form-success\");\n        formBlock.reset();\n        document.querySelector(\"#rovo-newsletter-checkbox\").checked = true;\n      }, 3000);\n    }\n\n    function findFields(form, result) {\n      result = result || {};\n      form\n        .find(':input:not([type=\"submit\"]):not([type=\"file\"])')\n        .each(function (i, el) {\n          var field = $(el);\n          var type = field.attr(\"type\");\n          var name =\n            field.attr(\"data-name\") || field.attr(\"name\") || \"Field \" + (i + 1);\n          var value = field.val();\n\n          if (type === \"checkbox\") {\n            value = field.is(\":checked\");\n          } else if (type === \"radio\") {\n            if (result[name] === null || typeof result[name] === \"string\") {\n              return;\n            }\n\n            value =\n              form\n                .find('input[name=\"' + field.attr(\"name\") + '\"]:checked')\n                .val() || null;\n          }\n\n          if (typeof value === \"string\") {\n            value = $.trim(value);\n          }\n\n          result[name] = value;\n        });\n    }\n\n    $(\"#email-form\").submit(function (evt) {\n      evt.preventDefault();\n      let siteId = $(\"html\").attr(\"data-wf-site\");\n      let formUrl = \"https://webflow.com\" + \"/api/v1/form/\" + siteId;\n      let payload = {\n        name: evt.currentTarget.getAttribute(\"data-name\"),\n        source: window.location.href,\n        test: Webflow.env(),\n        fields: {},\n        fileUploads: {},\n        dolphin: /pass[\\s-_]?(word|code)|secret|login|credentials/i.test(\n          $(\"#email-form\").html()\n        )\n      };\n\n      findFields($(\"#email-form\"), payload.fields);\n      const isFormValid = formBlock.checkValidity();\n\n      if (isFormValid) {\n        $.ajax({\n          url: formUrl,\n          data: payload,\n          type: \"POST\",\n          dataType: \"json\",\n          crossDomain: true\n        })\n          .done((res) => {\n            handleSuccess();\n          })\n          .fail((err) => console.log(err));\n      } else {\n        !emailField.checkValidity() &&\n          emailField.parentElement.classList.add(\"rovo-email-field-error\");\n        !checkboxField.checkValidity() &&\n          checkboxField.parentElement.classList.add(\n            \"rovo-checkbox-field-error\"\n          );\n      }\n    });\n  });\n}\n"],"names":["document","getElementById","Webflow","push","$","off","formBlock","querySelector","emailField","checkboxField","submit","evt","preventDefault","form","result","formUrl","attr","payload","name","currentTarget","getAttribute","source","window","location","href","test","env","fields","fileUploads","dolphin","html","find","each","i","el","field","type","value","val","is","trim","checkValidity","ajax","url","data","dataType","crossDomain","done","res","errorCheckboxClass","errorEmailClass","parentElement","classList","remove","add","setTimeout","reset","checked","fail","err","console","log"],"sourceRoot":""}